quarkus.smallrye-graphql.ui.always-include=true
quarkus.arc.remove-unused-beans=false
quarkus.arc.unremovable-types=com.kaya.application.port.in.user.*
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=
quarkus.datasource.reactive.url=postgresql://127.0.0.1:5432/kaya
# Activation de la mise à jour automatique du schéma
quarkus.hibernate-orm.database.generation=update

# Si vous voulez voir les requêtes SQL générées (utile pour le débogage)
#quarkus.hibernate-orm.log.sql=false
#quarkus.devservices.enabled=true

# Activation de Swagger UI
quarkus.swagger-ui.always-include=true

# Chemin d'accès à Swagger UI (optionnel, par défaut c'est /swagger-ui)
quarkus.swagger-ui.path=/swagger-ui

# Configuration de l'API
mp.openapi.scan.disable=false
mp.openapi.scan.packages=com.kaya

quarkus.jackson.fail-on-unknown-properties=false
quarkus.jackson.accept-case-insensitive-enums=true

# Send output to a trace.log file under the /tmp directory
quarkus.log.file.enable=true
quarkus.log.file.path=logs/tmp/trace.log
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
# Configure a named handler that logs to console
quarkus.log.handler.console."STRUCTURED_LOGGING".format=%e%n
# Configure a named handler that logs to file
quarkus.log.handler.file."STRUCTURED_LOGGING_FILE".enable=true
quarkus.log.handler.file."STRUCTURED_LOGGING_FILE".format=%e%n
# Configure the category and link the two named handlers to it
quarkus.log.category."io.quarkus.category".level=INFO
quarkus.log.category."io.quarkus.category".handlers=STRUCTURED_LOGGING,STRUCTURED_LOGGING_FILE